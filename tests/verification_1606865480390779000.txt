************ TESTING CIRCULAR EUCLIDEAN COST MATRICES ************

Testing 4x4 matrix...

   0.0 1414.2 2000.0 1414.2 
1414.2    0.0 1414.2 2000.0 
2000.0 1414.2    0.0 1414.2 
1414.2 2000.0 1414.2    0.0 

Brute Iterative: 	[0, 1, 2, 3, 0] 	Cost: 5656.8542494923795
Brute Recursive: 	[0, 3, 2, 1, 0] 	Cost: 5656.8542494923795
Dynamic Programming: 	[0, 3, 2, 1, 0] 	Cost: 5656.8542494923795

Testing 5x5 matrix...

   0.0 1175.6 1902.1 1175.6 1902.1 
1175.6    0.0 1902.1 1902.1 1175.6 
1902.1 1902.1    0.0 1175.6 1175.6 
1175.6 1902.1 1175.6    0.0 1902.1 
1902.1 1175.6 1175.6 1902.1    0.0 

Brute Iterative: 	[0, 1, 4, 2, 3, 0] 	Cost: 5877.852522924732
Brute Recursive: 	[0, 1, 4, 2, 3, 0] 	Cost: 5877.852522924732
Dynamic Programming: 	[0, 1, 4, 2, 3, 0] 	Cost: 5877.852522924732

Testing 6x6 matrix...

   0.0 1000.0 1732.1 1000.0 1732.1 2000.0 
1000.0    0.0 2000.0 1732.1 1000.0 1732.1 
1732.1 2000.0    0.0 1000.0 1732.1 1000.0 
1000.0 1732.1 1000.0    0.0 2000.0 1732.1 
1732.1 1000.0 1732.1 2000.0    0.0 1000.0 
2000.0 1732.1 1000.0 1732.1 1000.0    0.0 

Brute Iterative: 	[0, 1, 4, 5, 2, 3, 0] 	Cost: 6000.0
Brute Recursive: 	[0, 3, 2, 5, 4, 1, 0] 	Cost: 6000.0
Dynamic Programming: 	[0, 3, 2, 5, 4, 1, 0] 	Cost: 6000.0

Testing 7x7 matrix...

   0.0 1563.7 1563.7  867.8  867.8 1949.9 1949.9 
1563.7    0.0 1949.9  867.8 1949.9 1563.7  867.8 
1563.7 1949.9    0.0 1949.9  867.8  867.8 1563.7 
 867.8  867.8 1949.9    0.0 1563.7 1949.9 1563.7 
 867.8 1949.9  867.8 1563.7    0.0 1563.7 1949.9 
1949.9 1563.7  867.8 1949.9 1563.7    0.0  867.8 
1949.9  867.8 1563.7 1563.7 1949.9  867.8    0.0 

Brute Iterative: 	[0, 3, 1, 6, 5, 2, 4, 0] 	Cost: 6074.3723476458135
Brute Recursive: 	[0, 3, 1, 6, 5, 2, 4, 0] 	Cost: 6074.3723476458135
Dynamic Programming: 	[0, 3, 1, 6, 5, 2, 4, 0] 	Cost: 6074.3723476458135

Testing 8x8 matrix...

   0.0 1847.8 1414.2  765.4 2000.0 1414.2  765.4 1847.8 
1847.8    0.0 1847.8 1414.2  765.4  765.4 2000.0 1414.2 
1414.2 1847.8    0.0 1847.8 1414.2 2000.0  765.4  765.4 
 765.4 1414.2 1847.8    0.0 1847.8  765.4 1414.2 2000.0 
2000.0  765.4 1414.2 1847.8    0.0 1414.2 1847.8  765.4 
1414.2  765.4 2000.0  765.4 1414.2    0.0 1847.8 1847.8 
 765.4 2000.0  765.4 1414.2 1847.8 1847.8    0.0 1414.2 
1847.8 1414.2  765.4 2000.0  765.4 1847.8 1414.2    0.0 

Brute Iterative: 	[0, 3, 5, 1, 4, 7, 2, 6, 0] 	Cost: 6122.934917841436
Brute Recursive: 	[0, 3, 5, 1, 4, 7, 2, 6, 0] 	Cost: 6122.934917841436
Dynamic Programming: 	[0, 3, 5, 1, 4, 7, 2, 6, 0] 	Cost: 6122.934917841436

Testing 9x9 matrix...

   0.0 1969.6 1969.6 1285.6 1285.6 1732.1 1732.1  684.0  684.0 
1969.6    0.0  684.0 1285.6 1732.1 1285.6  684.0 1732.1 1969.6 
1969.6  684.0    0.0 1732.1 1285.6  684.0 1285.6 1969.6 1732.1 
1285.6 1285.6 1732.1    0.0 1969.6 1969.6  684.0  684.0 1732.1 
1285.6 1732.1 1285.6 1969.6    0.0  684.0 1969.6 1732.1  684.0 
1732.1 1285.6  684.0 1969.6  684.0    0.0 1732.1 1969.6 1285.6 
1732.1  684.0 1285.6  684.0 1969.6 1732.1    0.0 1285.6 1969.6 
 684.0 1732.1 1969.6  684.0 1732.1 1969.6 1285.6    0.0 1285.6 
 684.0 1969.6 1732.1 1732.1  684.0 1285.6 1969.6 1285.6    0.0 

Brute Iterative: 	[0, 8, 4, 5, 2, 1, 6, 3, 7, 0] 	Cost: 6156.362579862037
Brute Recursive: 	[0, 7, 3, 6, 1, 2, 5, 4, 8, 0] 	Cost: 6156.362579862037
Dynamic Programming: 	[0, 7, 3, 6, 1, 2, 5, 4, 8, 0] 	Cost: 6156.362579862037

************ TESTING RANDOM COST MATRICES ************

Testing 4x4 matrix...

000 322 795 072 
322 000 369 840 
795 369 000 445 
072 840 445 000 

Brute Iterative: 	[0, 1, 2, 3, 0] 	Cost: 1208
Brute Recursive: 	[0, 1, 2, 3, 0] 	Cost: 1208
Dynamic Programming: 	[0, 1, 2, 3, 0] 	Cost: 1208

Testing 5x5 matrix...

000 271 347 902 246 
271 000 126 084 824 
347 126 000 381 367 
902 084 381 000 213 
246 824 367 213 000 

Brute Iterative: 	[0, 2, 1, 3, 4, 0] 	Cost: 1016
Brute Recursive: 	[0, 2, 1, 3, 4, 0] 	Cost: 1016
Dynamic Programming: 	[0, 2, 1, 3, 4, 0] 	Cost: 1016

Testing 6x6 matrix...

000 239 515 713 732 060 
239 000 928 020 073 121 
515 928 000 484 586 862 
713 020 484 000 672 167 
732 073 586 672 000 214 
060 121 862 167 214 000 

Brute Iterative: 	[0, 2, 3, 1, 4, 5, 0] 	Cost: 1366
Brute Recursive: 	[0, 2, 3, 1, 4, 5, 0] 	Cost: 1366
Dynamic Programming: 	[0, 2, 3, 1, 4, 5, 0] 	Cost: 1366

Testing 7x7 matrix...

000 786 462 300 590 310 443 
786 000 136 128 753 846 972 
462 136 000 663 843 484 564 
300 128 663 000 758 812 828 
590 753 843 758 000 763 976 
310 846 484 812 763 000 520 
443 972 564 828 976 520 000 

Brute Iterative: 	[0, 3, 1, 2, 6, 5, 4, 0] 	Cost: 3001
Brute Recursive: 	[0, 3, 1, 2, 6, 5, 4, 0] 	Cost: 3001
Dynamic Programming: 	[0, 3, 1, 2, 6, 5, 4, 0] 	Cost: 3001

Testing 8x8 matrix...

000 958 225 013 518 848 166 870 
958 000 586 315 995 219 606 922 
225 586 000 799 268 261 692 611 
013 315 799 000 366 119 475 744 
518 995 268 366 000 949 155 233 
848 219 261 119 949 000 850 514 
166 606 692 475 155 850 000 067 
870 922 611 744 233 514 067 000 

Brute Iterative: 	[0, 3, 1, 5, 2, 4, 7, 6, 0] 	Cost: 1542
Brute Recursive: 	[0, 3, 1, 5, 2, 4, 7, 6, 0] 	Cost: 1542
Dynamic Programming: 	[0, 3, 1, 5, 2, 4, 7, 6, 0] 	Cost: 1542

Testing 9x9 matrix...

000 165 340 511 373 977 274 968 236 
165 000 382 651 318 010 583 665 752 
340 382 000 744 695 156 961 631 435 
511 651 744 000 443 745 940 981 089 
373 318 695 443 000 002 189 784 850 
977 010 156 745 002 000 501 937 788 
274 583 961 940 189 501 000 467 097 
968 665 631 981 784 937 467 000 221 
236 752 435 089 850 788 097 221 000 

Brute Iterative: 	[0, 1, 5, 2, 7, 8, 3, 4, 6, 0] 	Cost: 2178
Brute Recursive: 	[0, 1, 5, 2, 7, 8, 3, 4, 6, 0] 	Cost: 2178
Dynamic Programming: 	[0, 1, 5, 2, 7, 8, 3, 4, 6, 0] 	Cost: 2178

Verified: True
